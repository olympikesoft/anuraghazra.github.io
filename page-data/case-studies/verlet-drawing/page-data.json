{"componentChunkName":"component---src-templates-case-study-js","path":"/case-studies/verlet-drawing","result":{"data":{"markdownRemark":{"id":"796752f3-8b83-581a-aa07-cec9eb3ac26b","html":"<p>Verlet Drawing is one of my ambitious javascript project.\nI admit that it is also one of my poorly written project ever although i learned many things about javascript, code smells, and refactoring after finishing this project.</p>\n<p>I implemented many features in Verlet drawing, including <code class=\"language-text\">Undo Redo with CTRL+Z and Y</code> drawing each and every point and sticks individually and also even <code class=\"language-text\">saving a JSON</code> file, which will actually save all the <code class=\"language-text\">points</code> and <code class=\"language-text\">constraints&#39;s</code> positions.</p>\n<p>Verlet Drawing is built by using my 1st verlet physics engine called <code class=\"language-text\">Verlet.js</code>, don't confuse it with <code class=\"language-text\">Verly.js</code>. Verly.js is more robust and way much better than verlet.js.</p>\n<p>well I'm not going to go deep into the codebase and explaining step by step how everything works here is just a basic overview</p>\n<h2 id=\"How-It-Works\"><a href=\"#How-It-Works\" aria-label=\"How It Works permalink\" class=\"gatsby-remark-autolink\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>How It Works?</h2>\n<p>If you had read my blog post about <a href=\"/blog/making-a-verlet-physics-engine-in-javascript\">Making a Verlet Physics Engine in Javascript</a> then you will know that every verlet physics simulation has two main components - <code class=\"language-text\">dots</code> and <code class=\"language-text\">sticks</code>, so you can basically add points and create sticks with the mouse.client positions and save them in an array and update the simulation accordingly in real-time. </p>\n<h2 id=\"What-did-I-learned-from-this-project\"><a href=\"#What-did-I-learned-from-this-project\" aria-label=\"What did I learned from this project permalink\" class=\"gatsby-remark-autolink\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>What did I learned from this project?</h2>\n<p>When I started this project, I was not that good in javascript, and I also did not know how all the modern cool syntactic sugar works and what even OOP means. so basically I just jumped into this project and started working, and after finishing this project I realized my mistakes, and I tried to fix my mistakes with my later projects and progression on my javascript knowledge, things that I learned from this projects are</p>\n<ul>\n<li>Writing clean code is necessary </li>\n<li>Modularizing and refactoring is mandatory</li>\n<li>Learning &#x26; applying design patterns is always a good idea </li>\n<li>There's no coding knowledge barrier for doing an ambitious project</li>\n</ul>\n<blockquote>\n<p>fin!</p>\n</blockquote>","fields":{"slug":"/case-studies/verlet-drawing"},"frontmatter":{"demo":"//anuraghazra.github.io/VerletDrawing","iframe":"//www.youtube.com/embed/OCZXO8C4zTA/?modestbranding=1&showinfo=0&autohide=1&rel=0","src":"//github.com/anuraghazra/VerletDrawing","title":"Verlet Drawing","info":{"idea":"Verlet Drawing is a physics-based drawing app. made with verlet.js as a showcase of its capabilities.","links":[["Verlet.js [Outdated]","http://github.com/anuraghazra/verlet.js"]],"tech":["Javascript","HTML5 Canvas","VerletPhysics"]}}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/case-studies/verlet-drawing"}}}